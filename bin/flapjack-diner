#!/usr/bin/env ruby

require 'httparty'
require 'json'
require 'pp'

module Flapjack

  class Diner

    include HTTParty
    format :json

    class << self

      # NB: clients will need to handle any exceptions caused by,
      # e.g., network failures or non-parseable JSON data.

      def checks(entity)
        response = get("/entities/#{entity}/checks")
        JSON.parse(response.body)
      end

      def check_status(entity, check)
        response = get("/entity_checks/#{entity}:#{check}")
        JSON.parse(response.body)
      end

      def acknowledge_check!(entity, check, options = {})
        # TODO validate options
        response = post("/acknowledgments/#{entity}:#{check}?summary=#{options[:summary]}")
        JSON.parse(response.body)
      end

      # TODO check whether HTTParty escapes URL or whether this script should do it
      def create_scheduled_maintenance!(entity, check, options = {})
        # TODO validate options
        response = post("/scheduled_maintenances/#{entity}:#{check}?" +
          "start_time=#{options[:start_time]}&duration=#{options[:duration]}&summary=#{options[:summary]}")
        JSON.parse(response.body)
      end

    end

  end

end

Flapjack::Diner.base_uri('http://127.0.0.1:5081')

pp Flapjack::Diner.checks('clientx-app-01')
pp Flapjack::Diner.status('clientx-app-01', 'ping')