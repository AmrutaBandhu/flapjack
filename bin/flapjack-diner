#!/usr/bin/env ruby

require 'httparty'
require 'json'
require 'pp'

module Flapjack

  class Diner

    include HTTParty
    format :json

    class << self

      # NB: clients will need to handle any exceptions caused by,
      # e.g., network failures or non-parseable JSON data.

      def entity_checks(entity_name)
        response = get("/entities/#{entity_name}/checks")
        JSON.parse(response.body)
      end

      def entity_check_status(entity_name, check_name)
        response = get("/entity_checks/#{entity_name}:#{check_name}")
        JSON.parse(response.body)
      end

      def entity_check_acknowledge!(entity_name, check_name)
        response = put("/entity_checks/#{entity_name}:#{check_name}?acknowledge=1")
        JSON.parse(response.body)
      end

    end

  end

end

Flapjack::Diner.base_uri('http://127.0.0.1:5081')

pp Flapjack::Diner.entity_checks('clientx-app-01')
pp Flapjack::Diner.entity_check_status('clientx-app-01', 'ping')