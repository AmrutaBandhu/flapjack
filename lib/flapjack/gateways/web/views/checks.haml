!!! 5
- nav = render_haml('_nav.haml', self)
- head = render_haml('_head.haml', self)
- foot = render_haml('_foot.haml', self)
%html
  %head
    %title Flapjack - #{@adjective.capitalize} Checks
    = head
  %body
    %div#wrap
      %div{:class => "container"}
        %div{:class => "page-header"}
          = nav
          %h2 #{@adjective.capitalize} Checks
        %p #{@count_failing_checks} failing out of #{@count_all_checks}
        %table{:class => "table table-bordered table-hover table-condensed"}
          %tr
            %th Entity
            %th Check
            %th State
            %th Summary
            %th Last State Change
            %th Last Update
            %th Last Notification
          - @entities_sorted.each do |entity|
            - row_entity = nil
            - @states[entity].each do |check, status, summary, changed, updated, in_unscheduled_outage, in_scheduled_outage, notified|
              - colour_class = status
              - case status
              - when 'critical', 'unknown'
                - colour_class = 'error'
              - when 'ok', 'up'
                - colour_class = 'success'
              %tr{:class => colour_class}
                - unless row_entity && entity == row_entity
                  %td{:rowspan => @states[entity].length}
                    - link = "/entity/" + CGI.escape(entity)
                    %a(href=link) #{entity}
                - row_entity = entity
                %td{:class => colour_class}
                  - link = "/check?entity=" + CGI.escape(entity) + "&check=" + CGI.escape(check)
                  %a(title='check detail' href=link) #{check}
                %td{:class => colour_class}
                  = status.upcase
                  = " (Ack'd)" if in_unscheduled_outage
                  = " (Sched)" if in_scheduled_outage
                %td{:class => colour_class}= summary
                %td= changed
                %td= updated
                %td= notified
      %div#push
    %div#footer
      = foot
